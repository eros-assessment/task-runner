name: Build, Test, and Publish

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install Dependencies
        run: npm install

  snyk-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  test:
    runs-on: ubuntu-latest
    needs: snyk-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      - name: Run tests
        run: npm test

  upload-artifact:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      short_sha: ${{ steps.short-sha.outputs..id }}
      artifact_id: ${{ steps.artifact.outputs.artifact-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Keep production dependencies
        run: |
          npm prune --production

      - name: Get short SHA
        id: short-sha
        run: |
          id=$(echo ${{github.sha}} | cut -c 1-7)
          echo "::set-output name=id::$id"

      - name: Upload build artifact
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.short-sha.outputs.id }}
          path: |
            src/**/*
            !**/*.test.js
            node_modules
      
    trigger-deployment:
      - name: Trigger deployment in deployment repo
        needs: ["upload-artifact"]
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: eros-assessment
          repo: devops
          github_token: ${{ secrets.ORG_TOKEN }}
          workflow_file_name: deploy-task-runner.yml
          ref: ${{ github.ref_name }}
          wait_interval: 10
          client_payload: '{"tag":"${{ needs.upload-artifact.outputs.short_sha }}","artifact-id":"${{ needs.artifact.outputs.artifact_id }}", "workflow-run-id":"${{ github.run_id }}"}'
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
      
    